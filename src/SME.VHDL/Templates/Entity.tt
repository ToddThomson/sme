<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="SME" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="SME.VHDL" #>
<#@ import namespace="SME.AST" #>
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;

-- library SYSTEM_TYPES;
use work.SYSTEM_TYPES.ALL;

-- library CUSTOM_TYPES;
use work.CUSTOM_TYPES.ALL;

-- User defined packages here
-- #### USER-DATA-IMPORTS-START
-- #### USER-DATA-IMPORTS-END


entity <#= Process.Name #> is
  port(
<# foreach (var bus in Process.InputBusses.Where(x => !Process.OutputBusses.Contains(x))) { 
       var busname = RS.GetLocalBusName(bus, Process);
#>
    -- Input bus <#= busname #> signals
<#     foreach (var signal in bus.Signals) { #>
    <#= Naming.ToValidName(busname + "_" + signal.Name) #>: in <#= RS.VHDLWrappedTypeName(signal) #>;
<#     } #>
<# } #>

<# foreach (var bus in Process.OutputBusses.Where(x => !Process.InputBusses.Contains(x))) {
       var busname = RS.GetLocalBusName(bus, Process);
#>
    -- Output bus <#= busname #> signals
<#     foreach (var signal in RSP.WrittenSignals(bus)) { #>
    <#= Naming.ToValidName(busname + "_" + signal.Name) #>: out <#= RS.VHDLWrappedTypeName(signal) #>;
<#     } #>
<# } #>

<# foreach (var bus in Process.InputBusses.Where(x => Process.OutputBusses.Contains(x))) {
       var busname = RS.GetLocalBusName(bus, Process);
#>
    -- Input/output bus <#= busname #> signals
<#     foreach (var signal in bus.Signals) { #>
    <#= Naming.ToValidName(busname + "_" + signal.Name) #>: in <#= RS.VHDLWrappedTypeName(signal) #>;
<#     } #>

<#     foreach (var signal in bus.Signals) { #>
    out_<#= Naming.ToValidName(busname + "_" + signal.Name) #>: out <#= RS.VHDLWrappedTypeName(signal) #>;
<#     } #>
<# } #>

<# if (Process.SharedVariables.Any() || Process.SharedSignals.Any()) { #>
    -- Initialization values
<#     foreach (var variable in Process.SharedVariables) { #>
    <#= variable.Name #>_reset_value: in <#= RS.VHDLWrappedTypeName(variable) #>;
<#     } #>
<#     foreach (var variable in Process.SharedSignals) { #>
    <#= variable.Name #>_reset_value: in <#= RS.VHDLWrappedTypeName(variable) #>;
<#     } #>
<# } #>

    -- Clock signal
    CLK : in Std_logic;

    -- Ready signal
    RDY : in Std_logic;

    -- Finished signal
    FIN : out Std_logic;

    -- Reset signal
    RST : in Std_logic
 );
end <#= Process.Name #>;

architecture RTL of <#= Process.Name #> is
<# foreach (var bus in Process.InternalBusses) {
       var busname = RS.GetLocalBusName(bus, Process);
#>
  -- Internal bus <#= busname #> signals
<#     foreach (var signal in bus.Signals) { #>
  signal <#= Naming.ToValidName(busname + "_" + signal.Name) #>: <#= RS.VHDLWrappedTypeName(signal) #>;
<#     } #>

<# } #>

<# if (Process.SharedSignals.Any()) { #>
  -- Internal signals
<#     foreach (var s in Process.SharedSignals) { #>
  signal <#= s.Name #> : <#= RS.VHDLWrappedTypeName(s) #>;
<#     } #>
<# } #>

<# if (RSP.IsComponent) { #>
  -- Component declaration and signals
<#= RSP.ComponentSignals #>
<# } #>

<# if (Process.Methods != null && Process.Methods.Any(x => !x.Ignore)) { #>
  -- Internal methods
<#     foreach (var s in Process.Methods.Where(x => !x.Ignore)) { #>
<#         foreach(var line in RSP.Helper.RenderMethod(s)) { #>
  <#= line #>
<#         } #>

<#     } #>
<# } #>


  -- User defined signals, procedures and components here
  -- #### USER-DATA-SIGNALS-START
  -- #### USER-DATA-SIGNALS-END

begin

    -- Custom processes go here
    -- #### USER-DATA-PROCESSES-START
    -- #### USER-DATA-PROCESSES-END

<# if (RSP.IsComponent) { #>
    -- Component instantiation
<#= RSP.ComponentProcesses #>
<# } else { #>

    process(
        -- Custom sensitivity signals here
        -- #### USER-DATA-SENSITIVITY-START
        -- #### USER-DATA-SENSITIVITY-END
        RDY,
        <#= Process.IsClocked ? "CLK," : "" #>
        RST
    )
<#         if (RSP.Variables.Count() > 0) { #>
    -- Internal variables
<#         } #>
<#         foreach(var s in RSP.Variables) { #>
    variable <#= s.Name #> : <#= RS.VHDLWrappedTypeName(s) #>;
<#         } #>

    variable reentry_guard : Std_logic;

    -- #### USER-DATA-NONCLOCKEDVARIABLES-START
    -- #### USER-DATA-NONCLOCKEDVARIABLES-END
	begin
        -- Initialize code here
        -- #### USER-DATA-NONCLOCKEDSHAREDINITIALIZECODE-START
        -- #### USER-DATA-NONCLOCKEDSHAREDINITIALIZECODE-END

        if RST = '1' then
<#     foreach(var s in RSP.ProcessResetStaments) { #>
            <#= s #>
<#     } #>
<#     foreach(var variable in Process.SharedVariables) { #>
            <#= variable.Name #> := <#= variable.Name #>_reset_value;
<#     } #>
<#     foreach(var variable in Process.SharedSignals) { #>
            <#= variable.Name #> <= <#= variable.Name #>_reset_value;
<#     } #>

            reentry_guard := '1';
            FIN <= '0';

            -- Initialize code here
            -- #### USER-DATA-NONCLOCKEDRESETCODE-START
            -- #### USER-DATA-NONCLOCKEDRESETCODE-END

        <# if (Process.IsClocked) { #>
        elsif rising_edge(CLK) then
        <# } else  { #>
        else
        <# } #>

            if RDY /= reentry_guard then

                reentry_guard := RDY;

                -- Initialize code here
                -- #### USER-DATA-NONCLOCKEDINITIALIZECODE-START
                -- #### USER-DATA-NONCLOCKEDINITIALIZECODE-END


<#     foreach(var line in RSP.Helper.RenderMethod(Process.MainMethod)) { #>
                <#= line #>
<#     } #>

                FIN <= RDY;

            end if;
        end if;

        -- Non-clocked process actions here

        -- #### USER-DATA-CODE-START
        -- #### USER-DATA-CODE-END

    end process;
<# } #>

end RTL;

-- User defined architectures here
-- #### USER-DATA-ARCH-START
-- #### USER-DATA-ARCH-END
