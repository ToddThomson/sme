<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".vhdl" #>

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;

package SYSTEM_TYPES is
    subtype T_SYSTEM_BOOL is std_logic;

<# foreach(var i in new[] {8, 16, 32, 64}) { #>
    subtype T_SYSTEM_UINT<#= i #> is unsigned(<#= (i - 1) #> downto 0);
<# } #>

<# foreach(var i in new[] {8, 16, 32, 64}) { #>
    subtype T_SYSTEM_INT<#= i #> is signed(<#= (i - 1) #> downto 0);
<# } #>

    type T_SYSTEM_BOOL_ARRAY is array(natural range <>) of T_SYSTEM_BOOL;

<# foreach(var i in new[] {8, 16, 32, 64}) { #>
    type T_SYSTEM_UINT<#= i #>_ARRAY is array(natural range <>) of T_SYSTEM_UINT<#= i #>;
<# } #>

<# foreach(var i in new[] {8, 16, 32, 64}) { #>
    type T_SYSTEM_INT<#= i #>_ARRAY is array(natural range <>) of T_SYSTEM_INT<#= i #>;
<# } #>


<# for(var i = 1; i < 64; i++) { 
       if (i == 8 || i == 16 || i == 32 || i == 64)
           continue;
#>
    subtype T_UINT<#= i #> is unsigned(<#= i - 1 #> downto 0);
<#}#>

<# for(var i = 1; i < 64; i++) { 
       if (i == 8 || i == 16 || i == 32 || i == 64)
           continue;
#>
    subtype T_INT<#= i #> is signed(<#= i - 1 #> downto 0);
<#}#>

<# for(var i = 1; i < 64; i++) { 
       if (i == 8 || i == 16 || i == 32 || i == 64)
           continue;
#>
    type T_UINT<#= i #>_ARRAY is array(natural range <>) of T_UINT<#= i #>;
<#}#>

<# for(var i = 1; i < 64; i++) { 
       if (i == 8 || i == 16 || i == 32 || i == 64)
           continue;
#>
    type T_INT<#= i #>_ARRAY is array(natural range <>) of T_INT<#= i #>;
<#}#>


<# for(var i = 1; i < 64; i++) { 
       if (i == 8 || i == 16 || i == 32 || i == 64)
           continue;
#>
    -- converts an integer to UINT<#= i #>
    pure function UINT<#= i #>(v: integer) return T_UINT<#= i #>;

    -- converts a std_logic_vector to UINT<#= i #>
    pure function UINT<#= i #>(v: std_logic_vector) return T_UINT<#= i #>;

<#}#>

<# for(var i = 1; i < 64; i++) { 
       if (i == 8 || i == 16 || i == 32 || i == 64)
           continue;
#>
    -- converts an integer to INT<#= i #>
    pure function INT<#= i #>(v: integer) return T_INT<#= i #>;

    -- converts a std_logic_vector to INT<#= i #>
    pure function INT<#= i #>(v: std_logic_vector) return T_INT<#= i #>;

<#}#>

<# foreach(var i in new[] {8, 16, 32, 64}) { #>
    -- converts an integer to SYSTEM_UINT<#= i #>
    pure function SYSTEM_UINT<#= i #>(v: integer) return T_SYSTEM_UINT<#= i #>;

    -- converts a std_logic_vector to SYSTEM_UINT<#= i #>
    pure function SYSTEM_UINT<#= i #>(v: std_logic_vector) return T_SYSTEM_UINT<#= i #>;

<# } #>

<# foreach(var i in new[] {8, 16, 32, 64}) { #>
    -- converts an integer to SYSTEM_INT<#= i #>
    pure function SYSTEM_INT<#= i #>(v: integer) return T_SYSTEM_INT<#= i #>;

    -- converts a std_logic_vector to SYSTEM_UINT<#= i #>
    pure function SYSTEM_INT<#= i #>(v: std_logic_vector) return T_SYSTEM_INT<#= i #>;

<# } #>


end SYSTEM_TYPES;


package body SYSTEM_TYPES is

<# for(var i = 1; i < 64; i++) { 
       if (i == 8 || i == 16 || i == 32 || i == 64)
           continue;
#>
    -- converts an integer to UINT<#= i #>
    pure function UINT<#= i #>(v: integer) return T_UINT<#= i #> is
    begin
        return TO_UNSIGNED(v, T_UINT<#= i #>'length);
    end UINT<#= i #>;

    -- converts a std_logic_vector to UINT<#= i #>
    pure function UINT<#= i #>(v: std_logic_vector) return T_UINT<#= i #> is
    begin
        return RESIZE(UNSIGNED(v), T_UINT<#= i #>'length);
    end UINT<#= i #>;

<#}#>

<# for(var i = 1; i < 64; i++) { 
       if (i == 8 || i == 16 || i == 32 || i == 64)
           continue;
#>
    -- converts an integer to INT<#= i #>
    pure function INT<#= i #>(v: integer) return T_INT<#= i #> is
    begin
        return TO_SIGNED(v, T_INT<#= i #>'length);
    end INT<#= i #>;

    -- converts a std_logic_vector to INT<#= i #>
    pure function INT<#= i #>(v: std_logic_vector) return T_INT<#= i #> is
    begin
        return RESIZE(SIGNED(v), T_INT<#= i #>'length);
    end INT<#= i #>;

<#}#>

<# foreach(var i in new[] {8, 16, 32, 64}) { #>
    -- converts an integer to SYSTEM_UINT<#= i #>
    pure function SYSTEM_UINT<#= i #>(v: integer) return T_SYSTEM_UINT<#= i #> is
    begin
        return TO_UNSIGNED(v, T_SYSTEM_UINT<#= i #>'length);
    end SYSTEM_UINT<#= i #>;

    -- converts a std_logic_vector to SYSTEM_UINT<#= i #>
    pure function SYSTEM_UINT<#= i #>(v: std_logic_vector) return T_SYSTEM_UINT<#= i #> is
    begin
        return RESIZE(UNSIGNED(v), T_SYSTEM_UINT<#= i #>'length);
    end SYSTEM_UINT<#= i #>;

<# } #>

<# foreach(var i in new[] {8, 16, 32, 64}) { #>
    -- converts an integer to SYSTEM_INT<#= i #>
    pure function SYSTEM_INT<#= i #>(v: integer) return T_SYSTEM_INT<#= i #> is
    begin
        return TO_SIGNED(v, T_SYSTEM_INT<#= i #>'length);
    end SYSTEM_INT<#= i #>;

    -- converts a std_logic_vector to SYSTEM_INT<#= i #>
    pure function SYSTEM_INT<#= i #>(v: std_logic_vector) return T_SYSTEM_INT<#= i #> is
    begin
        return RESIZE(SIGNED(v), T_SYSTEM_INT<#= i #>'length);
    end SYSTEM_INT<#= i #>;

<#}#>


end SYSTEM_TYPES;

